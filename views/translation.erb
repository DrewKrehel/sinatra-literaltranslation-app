<h1>Japanese grammar... but in English</h1>

<% client = OpenAI::Client.new(access_token: ENV.fetch("OPEN_AI_KEY"))

message_list_literal = [
  {
    "role" => "system",
    "content" => "You are a special translation tool. Your purpose is to restructure an English phrase using Japanese grammar and expressions, but continuing to use English words. Do not use any Japanese characters in your response. Do not reply with any additional comments or information beyond the literal translation."
  },
]

message_list_normal = [
  {
    "role" => "system",
    "content" => "You are an English-to-Japanese translation tool. Do not include any additional comments or advice beyond the Japanese translation in your response."
  },
]

message_list_no_kanji = [
  {
    "role" => "system",
    "content" => "You are an English-to-Japanese translation tool. Do not use any Kanji in the translation, only Hiragana and Katakana. Do not include any additional comments, restate the user input, or give advice beyond the Japanese translation in your response."
  },
]

message_list_english_alpha = [
  {
    "role" => "system",
    "content" => "You are an English-to-Japanese translation tool. Do not use any Japanese characters in the translation; spell each Japanese word only using the English alphabet. Do not include any additional comments, restate the user input, or give advice beyond the translation in your response."
  },
]

case @input_trans 
when "" then "Nothing"
else
  message_list_literal << { "role" => "user", "content" => @input_trans }
  api_response = client.chat(
      parameters: {
        model: "gpt-3.5-turbo",
        messages: message_list_literal
      }
    )
  @output_trans = api_response.fetch("choices").at(0).fetch("message").fetch("content")
end 

case @input_trans 
when "" then "Nothing"
else
  message_list_normal << { "role" => "user", "content" => @input_trans }
  api_response = client.chat(
      parameters: {
        model: "gpt-3.5-turbo",
        messages: message_list_normal
      }
    )
  @kanji_output = api_response.fetch("choices").at(0).fetch("message").fetch("content")
end 

case @input_trans 
when "" then "Nothing"
else
  message_list_no_kanji << { "role" => "user", "content" => @input_trans }
  api_response = client.chat(
      parameters: {
        model: "gpt-3.5-turbo",
        messages: message_list_no_kanji
      }
    )
  @phonetic_output = api_response.fetch("choices").at(0).fetch("message").fetch("content")
end

case @input_trans 
when "" then "Nothing"
else
  message_list_english_alpha << { "role" => "user", "content" => @input_trans }
  api_response = client.chat(
      parameters: {
        model: "gpt-3.5-turbo",
        messages: message_list_english_alpha
      }
    )
  @eng_alpha_output = api_response.fetch("choices").at(0).fetch("message").fetch("content")
end

%>



<dl>
  <dt>
    <strong>Your sentance:</strong>
  </dt>
  <dd>
    <%= @input_trans %>
  </dd>

  <dt>
    <strong>Normal translation</strong>
  </dt>
  <dd>
    <%= @kanji_output %>
  </dd>

  <dt>
    <strong>Only Japanese phonetic characters</strong>
  </dt>
  <dd>
    <%= @phonetic_output %>
  </dd>

  <dt>
    <strong>Only English phonetic characters</strong>
  </dt>
  <dd>
    <%= @eng_alpha_output %>
  </dd>

  <dt>
    <strong>The 'Literal' English Translation</strong>
  </dt>
  <dd>
    <%= @output_trans %>
  </dd>
</dl>

<p><a href="/">Go back home.</a></p>
